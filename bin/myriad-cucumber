#!/usr/bin/env node

'use strict';

var Optimist = require('optimist');
var Debug = require('debug')('myriad-cucumber')
var MyriadCucumber = require('../lib/myriad_cucumber');

function exit(code) {
  Debug("Exiting with code " + code);

  // See https://github.com/joyent/node/issues/3737 for more information
  // on why the process exit event is used
  process.on('exit', function() {
    process.exit(code);
  });
};

var optimist = Optimist
  .usage('Usage: $0 options')
  .options('h', {
    alias: 'help',
    describe: 'Displays this help message'
  })
  .options('c', {
    alias: 'config',
    default: './myriad-cucumber.js',
    describe: 'Path to the config file'
  })
  .options('o', {
    alias: 'out',
    describe: 'File to save the cucumber output to.  If not specified, output will go to stdout'
  })
  .options('s', {
    alias: 'myriad-server',
    describe: 'URL of the myriad-server.  If not specified, then myriad-cucumber will launch an embedded instance of myriad-server'
  })
  .options('w', {
    alias: 'workers',
    default: 2,
    describe: 'Number of instances of cucumber to run in parallel'
  })
  .options('l', {
    alias: 'local-package',
    boolean: true,
    default: true,
    describe: 'Only has an effect when no myriad-server URL is specified and myriad-server runs embedded within myriad-cucumber.  If true, use locally installed package instead of sending a tarball of the package to myriad-server'
  });
var argv = optimist.argv;

if (argv.help) {
  optimist.showHelp();
  exit(0);
}
else {
  var options = {
    myriadServerUrl: argv['myriad-server'],
    configFile: argv['config'],
    out: argv.out,
    localPackage: argv['local-package'],
    workers: argv.workers
  };

  Debug('Options ' + JSON.stringify(options));

  MyriadCucumber(options).run(function(err, report) {
    if (err) {
      Debug('Exiting');
      console.error(err);
      exit(1);
    }
    else {
      exit(0);
    }
  });
}
